version: '3.8'
services:

    #PHP Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: app
        container_name: app
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "${APP_PORT:-80}:80"
            # - "443:443"
        volumes:
            - ./:/var/www
            - ./nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    #MySQL Service
    db:
        image: mysql:8.0
        container_name: db
        restart: unless-stopped
        tty: true
        ports:
            - "3333:3306"
        environment:
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            # MYSQL_USER: '${DB_USERNAME}'
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./docker-compose/mysql/:/docker-entrypoint-initdb.d

        networks:
            - app-network
    phpmyadmin:
        image: phpmyadmin:latest
        environment:
            - PMA_HOST=db
            # - PMA_USER= root
            # - PMA_PASSWORD=root
            # - PMA_ARBITRARY=1
            - UPLOAD_LIMIT= 20M
        ports:
            - 8080:80
        networks:
            - app-network
        depends_on:
            - db
        restart: unless-stopped

#Docker Networks
networks:
    app-network:
        driver: bridge
#Volumes
volumes:
    dbdata:
        driver: bridge
